##################################################################################################
# service-a
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: service-a
  labels:
    app: service-a
    service: service-a
spec:
  ports:
  - port: 10001
    name: http
  selector:
    app: service-a
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: demo-service-a
  labels:
    account: service-a
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-a-v1
  labels:
    app: service-a
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-a
      version: v1
  template:
    metadata:
      labels:
        app: service-a
        version: v1
    spec:
      serviceAccountName: demo-service-a
      containers:
      - name: service-a
        image: kkk2099/kkk:service-a-1.0
        imagePullPolicy: Always
		env:
        - name: JVM_MEM
          value: "1G"
        - name: APP_VERSION
          value: "v1"
		- name: APP_KUBERNETES_ENABLED
		  value: true
		- name: SERVICE_B_URI
          value: "http://service-b:10002"
        ports:
        - containerPort: 10001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-a-v2
  labels:
    app: service-a
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-a
      version: v2
  template:
    metadata:
      labels:
        app: service-a
        version: v2
    spec:
      serviceAccountName: demo-service-a
      containers:
      - name: service-a
        image: kkk2099/kkk:service-a-1.0
        imagePullPolicy: Always
        env:
        - name: JVM_MEM
          value: "1G"
        - name: APP_VERSION
          value: "v2"
		- name: APP_KUBERNETES_ENABLED
		  value: true
		- name: SERVICE_B_URI
          value: "http://service-b:10002"
        ports:
        - containerPort: 10001
---
##################################################################################################
# service-b
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: service-b
  labels:
    app: service-b
    service: service-b
spec:
  ports:
  - port: 10002
    name: http
  selector:
    app: service-b
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: demo-service-b
  labels:
    account: service-b
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-b-v1
  labels:
    app: service-b
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-b
      version: v1
  template:
    metadata:
      labels:
        app: service-b
        version: v1
    spec:
      serviceAccountName: demo-service-b
      containers:
      - name: service-b
        image: kkk2099/kkk:service-b-1.0
        imagePullPolicy: Always
		env:
        - name: APP_VERSION
          value: "v1"
        ports:
        - containerPort: 10002
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-b-v2
  labels:
    app: service-b
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-b
      version: v2
  template:
    metadata:
      labels:
        app: service-b
        version: v2
    spec:
      serviceAccountName: demo-service-b
      containers:
      - name: service-b
        image: kkk2099/kkk:service-b-1.0
        imagePullPolicy: Always
        env:
        - name: APP_VERSION
          value: "v2"
        ports:
        - containerPort: 10002
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v2
  labels:
    app: reviews
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v2
  template:
    metadata:
      labels:
        app: reviews
        version: v2
    spec:
      serviceAccountName: bookinfo-reviews
      containers:
      - name: reviews
        image: docker.io/istio/examples-bookinfo-reviews-v2:1.20.2
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v3
  labels:
    app: reviews
    version: v3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v3
  template:
    metadata:
      labels:
        app: reviews
        version: v3
    spec:
      serviceAccountName: bookinfo-reviews
      containers:
      - name: reviews
        image: docker.io/istio/examples-bookinfo-reviews-v3:1.20.2
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
---
##################################################################################################
# Productpage services
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: productpage
  labels:
    app: productpage
    service: productpage
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: productpage
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-productpage
  labels:
    account: productpage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productpage-v1
  labels:
    app: productpage
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: productpage
      version: v1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9080"
        prometheus.io/path: "/metrics"
      labels:
        app: productpage
        version: v1
    spec:
      serviceAccountName: bookinfo-productpage
      containers:
      - name: productpage
        image: docker.io/istio/examples-bookinfo-productpage-v1:1.20.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
---